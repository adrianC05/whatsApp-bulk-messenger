# Dockerfile optimizado para Render.com (build en servidor)
FROM node:18-alpine

# Instalar Chromium y dependencias
RUN apk add --no-cache \
    chromium \
    nss \
    freetype \
    harfbuzz \
    ca-certificates \
    ttf-freefont \
    dumb-init

# Configurar Puppeteer para usar Chromium
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

WORKDIR /app

# Crear usuario no-root primero
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Copiar archivos como root
COPY --chown=nextjs:nodejs package*.json ./

# Instalar dependencias incluye dev para build
RUN npm install --legacy-peer-deps

# Copiar código fuente
COPY --chown=nextjs:nodejs . .

# Hacer build con todas las dependencias disponibles
RUN npm run build

# Limpiar devDependencies después del build
RUN npm prune --production --legacy-peer-deps

# Cambiar a usuario no-root
USER nextjs

EXPOSE 3000

# Usar dumb-init para mejor manejo de señales
ENTRYPOINT ["dumb-init", "--"]
CMD ["npm", "start"]